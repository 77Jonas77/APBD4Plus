// <auto-generated />
using Cw10.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cw10.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20240602133640_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cw10.Models.Account", b =>
                {
                    b.Property<int>("PkAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkAccount"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FkRole")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("PkAccount");

                    b.HasIndex("FkRole");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Cw10.Models.Category", b =>
                {
                    b.Property<int>("PkCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkCategory"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PkCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Cw10.Models.Product", b =>
                {
                    b.Property<int>("PkProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkProduct"));

                    b.Property<decimal>("Depth")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("PkProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Cw10.Models.ProductCategory", b =>
                {
                    b.Property<int>("FkProduct")
                        .HasColumnType("int");

                    b.Property<int>("FkCategory")
                        .HasColumnType("int");

                    b.HasKey("FkProduct", "FkCategory");

                    b.HasIndex("FkCategory");

                    b.ToTable("ProductsCategories");
                });

            modelBuilder.Entity("Cw10.Models.Role", b =>
                {
                    b.Property<int>("PkRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkRole"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PkRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Cw10.Models.ShoppingCart", b =>
                {
                    b.Property<int>("FkAccount")
                        .HasColumnType("int");

                    b.Property<int>("FkProduct")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("FkAccount", "FkProduct");

                    b.HasIndex("FkProduct");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Cw10.Models.Account", b =>
                {
                    b.HasOne("Cw10.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("FkRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Cw10.Models.ProductCategory", b =>
                {
                    b.HasOne("Cw10.Models.Category", "Category")
                        .WithMany("ProductsCategories")
                        .HasForeignKey("FkCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cw10.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("FkProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cw10.Models.ShoppingCart", b =>
                {
                    b.HasOne("Cw10.Models.Account", "Account")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("FkAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cw10.Models.Product", "Product")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("FkProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cw10.Models.Account", b =>
                {
                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("Cw10.Models.Category", b =>
                {
                    b.Navigation("ProductsCategories");
                });

            modelBuilder.Entity("Cw10.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("Cw10.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
